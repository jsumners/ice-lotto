# Rename this file to either `application-dev.properties` or
# `application-prod.properties`.
#
# Chose either the SQLite configuration or the H2 configuration and then
# remove the unchosen one.

### SQLite Configuration Example ###
db.type=sqlite
db.url=jdbc:sqlite:/Users/jsumners/Documents/My Dropbox/Projects/Java/ice-lotto/src/main/resources/test.sqlite3
db.name=icelotto

# Hibernate configuration
hibernate.dialect=org.hibernate.dialect.SQLiteDialect
hibernate.format_sql=true
hibernate.ejb.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
hibernate.show_sql=true
# `update`, `create`, `create-drop`
hibernate.hbm2ddl.auto=create
# import_files will only work if auto is set to `create` or `create-drop`
hibernate.hbm2ddl.import_files=/sql/gameItems.sql,/sql/prizeItems.sql

# EntityManager configuration
packages.to.scan=com.jrfom.icelotto.model

# Application storage path. This is where the application will store thing
# like item images it downloads from remote APIs.
application.store.path=/tmp/icelotto


### H2 Configuration Example ###
db.type=h2
db.url=jdbc:h2:/some/path/icelotto;INIT=CREATE SCHEMA IF NOT EXISTS icelotto;schema=icelotto

# Hibernate configuration
hibernate.default_schema=icelotto
hibernate.dialect=org.hibernate.dialect.H2Dialect
hibernate.format_sql=true
hibernate.ejb.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
hibernate.show_sql=true
# `update`, `create`, `create-drop`
hibernate.hbm2ddl.auto=create
# import_files will only work if auto is set to `create` or `create-drop`
hibernate.hbm2ddl.import_files=/sql/gameItems.sql,/sql/prizeItems.sql

# EntityManager configuration
packages.to.scan=com.jrfom.icelotto.model

# Application storage path. This is where the application will store thing
# like item images it downloads from remote APIs.
application.store.path=/tmp/icelotto